{"ast":null,"code":"import _slicedToArray from\"C:/Users/Mu/Desktop/todox/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ListItem(_ref){var todo=_ref.todo,id=_ref.id,checkComplete=_ref.checkComplete,handleEditTodos=_ref.handleEditTodos;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),onEdit=_useState2[0],setOnEdit=_useState2[1];var _useState3=useState(todo.name),_useState4=_slicedToArray(_useState3,2),editValue=_useState4[0],setEditValue=_useState4[1];var handeOnEdit=function handeOnEdit(){setOnEdit(true);};var handleSave=function handleSave(id){setOnEdit(false);if(editValue){handleEditTodos(editValue,id);}else{handleEditTodos(todo,id);}};var selections=[[\"Coming\",false],[\"Running\",false],[\"Done\",false]];if(onEdit){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"editValue\",value:editValue,name:\"editValue\",onChange:function onChange(e){return setEditValue(e.target.value.toLowerCase());}}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleSave(id);},children:\"Save\"})]})});}else{return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:id,className:todo.complete?\"active\":\"\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:id,checked:todo.complete,onChange:function onChange(){return checkComplete(id);}}),todo.name]}),/*#__PURE__*/_jsx(\"select\",{name:\"progress\",id:\"progress\",children:selections.map(function(option,index){return/*#__PURE__*/_jsx(\"option\",{id:index,value:option[1],children:option[0]},index);})}),/*#__PURE__*/_jsx(\"button\",{disabled:todo.complete,onClick:handeOnEdit,children:\"Edit\"})]})});}}","map":{"version":3,"sources":["C:/Users/Mu/Desktop/todox/src/components/ListItem.js"],"names":["React","useState","ListItem","todo","id","checkComplete","handleEditTodos","onEdit","setOnEdit","name","editValue","setEditValue","handeOnEdit","handleSave","selections","e","target","value","toLowerCase","complete","map","option","index"],"mappings":"+GAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,C,wFAEA,cAAe,SAASC,CAAAA,QAAT,MAAgE,IAA5CC,CAAAA,IAA4C,MAA5CA,IAA4C,CAAtCC,EAAsC,MAAtCA,EAAsC,CAAlCC,aAAkC,MAAlCA,aAAkC,CAAnBC,eAAmB,MAAnBA,eAAmB,CAC7E,cAA4BL,QAAQ,CAAC,KAAD,CAApC,wCAAOM,MAAP,eAAeC,SAAf,eACA,eAAkCP,QAAQ,CAACE,IAAI,CAACM,IAAN,CAA1C,yCAAOC,SAAP,eAAkBC,YAAlB,eAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBJ,SAAS,CAAC,IAAD,CAAT,CACD,CAFD,CAIA,GAAMK,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACT,EAAD,CAAQ,CACzBI,SAAS,CAAC,KAAD,CAAT,CACA,GAAIE,SAAJ,CAAe,CACbJ,eAAe,CAACI,SAAD,CAAYN,EAAZ,CAAf,CACD,CAFD,IAEO,CACLE,eAAe,CAACH,IAAD,CAAOC,EAAP,CAAf,CACD,CACF,CAPD,CASA,GAAMU,CAAAA,UAAU,CAAG,CACjB,CAAC,QAAD,CAAW,KAAX,CADiB,CAEjB,CAAC,SAAD,CAAY,KAAZ,CAFiB,CAGjB,CAAE,MAAF,CAAU,KAAV,CAHiB,CAAnB,CAOA,GAAIP,MAAJ,CAAY,CACV,mBACE,kCACE,mCACE,cACE,IAAI,CAAC,MADP,CAEE,EAAE,CAAC,WAFL,CAGE,KAAK,CAAEG,SAHT,CAIE,IAAI,CAAC,WAJP,CAKE,QAAQ,CAAE,kBAACK,CAAD,QAAOJ,CAAAA,YAAY,CAACI,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,WAAf,EAAD,CAAnB,EALZ,EADF,cASE,eAAQ,OAAO,CAAE,yBAAML,CAAAA,UAAU,CAACT,EAAD,CAAhB,EAAjB,kBATF,GADF,EADF,CAeD,CAhBD,IAgBO,CACL,mBACE,kCACE,mCACE,eAAO,OAAO,CAAEA,EAAhB,CAAoB,SAAS,CAAED,IAAI,CAACgB,QAAL,CAAgB,QAAhB,CAA2B,EAA1D,wBACE,cACE,IAAI,CAAC,UADP,CAEE,EAAE,CAAEf,EAFN,CAGE,OAAO,CAAED,IAAI,CAACgB,QAHhB,CAIE,QAAQ,CAAE,0BAAMd,CAAAA,aAAa,CAACD,EAAD,CAAnB,EAJZ,EADF,CAOGD,IAAI,CAACM,IAPR,GADF,cAYE,eAAQ,IAAI,CAAC,UAAb,CAAwB,EAAE,CAAC,UAA3B,UACGK,UAAU,CAACM,GAAX,CAAe,SAACC,MAAD,CAASC,KAAT,qBAEd,eAAoB,EAAE,CAAEA,KAAxB,CAA+B,KAAK,CAAED,MAAM,CAAC,CAAD,CAA5C,UACGA,MAAM,CAAC,CAAD,CADT,EAAaC,KAAb,CAFc,EAAf,CADH,EAZF,cAsBE,eAAQ,QAAQ,CAAEnB,IAAI,CAACgB,QAAvB,CAAiC,OAAO,CAAEP,WAA1C,kBAtBF,GADF,EADF,CA8BD,CACF","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function ListItem({ todo, id, checkComplete, handleEditTodos }) {\r\n  const [onEdit, setOnEdit] = useState(false);\r\n  const [editValue, setEditValue] = useState(todo.name);\r\n\r\n  const handeOnEdit = () => {\r\n    setOnEdit(true);\r\n  };\r\n\r\n  const handleSave = (id) => {\r\n    setOnEdit(false);\r\n    if (editValue) {\r\n      handleEditTodos(editValue, id);\r\n    } else {\r\n      handleEditTodos(todo, id);\r\n    }\r\n  };\r\n\r\n  const selections = [\r\n    [\"Coming\", false],\r\n    [\"Running\", false],\r\n    [ \"Done\", false],\r\n  ];\r\n\r\n\r\n  if (onEdit) {\r\n    return (\r\n      <div>\r\n        <li>\r\n          <input\r\n            type=\"text\"\r\n            id=\"editValue\"\r\n            value={editValue}\r\n            name=\"editValue\"\r\n            onChange={(e) => setEditValue(e.target.value.toLowerCase())}\r\n          />\r\n\r\n          <button onClick={() => handleSave(id)}>Save</button>\r\n        </li>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <li>\r\n          <label htmlFor={id} className={todo.complete ? \"active\" : \"\"}>\r\n            <input\r\n              type=\"checkbox\"\r\n              id={id}\r\n              checked={todo.complete}\r\n              onChange={() => checkComplete(id)}\r\n            />\r\n            {todo.name}\r\n          </label>\r\n\r\n\r\n          <select name=\"progress\" id=\"progress\">\r\n            {selections.map((option, index) => (\r\n             \r\n              <option key={index} id={index} value={option[1]} >\r\n                {option[0]}\r\n              </option> \r\n            ))}\r\n            \r\n          </select>\r\n\r\n          <button disabled={todo.complete} onClick={handeOnEdit}>\r\n            Edit\r\n          </button>\r\n        </li>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}