{"ast":null,"code":"import _slicedToArray from\"C:/Users/Mu/Desktop/todox/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState,createContext}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export var DataContext=/*#__PURE__*/createContext();export var DataProvide=function DataProvide(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),todos=_useState2[0],setTodos=_useState2[1];useEffect(function(){var todoStore=JSON.parse(localStorage.getItem(\"todStore\"));if(todoStore)setTodos(todoStore);},[]);useEffect(function(){localStorage.setItem(\"todStore\",JSON.stringify(todos));},[todos]);return/*#__PURE__*/_jsx(DataContext.Provider,{value:[todos,setTodos],children:props.children});};","map":{"version":3,"sources":["C:/Users/Mu/Desktop/todox/src/components/DataProvide.js"],"names":["React","useEffect","useState","createContext","DataContext","DataProvide","props","todos","setTodos","todoStore","JSON","parse","localStorage","getItem","setItem","stringify","children"],"mappings":"+GAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,aAArC,KAA0D,OAA1D,C,2CAEA,MAAO,IAAMC,CAAAA,WAAW,cAAGD,aAAa,EAAjC,CAEP,MAAO,IAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CACpC,cAA0BJ,QAAQ,CAAC,EAAD,CAAlC,wCAAOK,KAAP,eAAcC,QAAd,eAEAP,SAAS,CAAC,UAAM,CACd,GAAMQ,CAAAA,SAAS,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAlB,CACA,GAAIJ,SAAJ,CAAeD,QAAQ,CAACC,SAAD,CAAR,CAChB,CAHQ,CAGN,EAHM,CAAT,CAKAR,SAAS,CAAC,UAAM,CACdW,YAAY,CAACE,OAAb,CAAqB,UAArB,CAAiCJ,IAAI,CAACK,SAAL,CAAeR,KAAf,CAAjC,EACD,CAFQ,CAEN,CAACA,KAAD,CAFM,CAAT,CAIA,mBACE,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAE,CAACA,KAAD,CAAQC,QAAR,CAA7B,UACGF,KAAK,CAACU,QADT,EADF,CAKD,CAjBM","sourcesContent":["import React, { useEffect, useState, createContext } from \"react\";\r\n\r\nexport const DataContext = createContext();\r\n\r\nexport const DataProvide = (props) => {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const todoStore = JSON.parse(localStorage.getItem(\"todStore\"));\r\n    if (todoStore) setTodos(todoStore);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todStore\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  return (\r\n    <DataContext.Provider value={[todos, setTodos]}>\r\n      {props.children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}