{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mu\\\\Desktop\\\\todox\\\\src\\\\components\\\\ListItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListItem(_ref) {\n  _s();\n\n  let {\n    todo,\n    id,\n    checkComplete,\n    handleEditTodos\n  } = _ref;\n  const [onEdit, setOnEdit] = useState(false);\n  const [editValue, setEditValue] = useState(todo.name);\n\n  const handeOnEdit = () => {\n    setOnEdit(true);\n  };\n\n  const handleSave = id => {\n    setOnEdit(false);\n\n    if (editValue) {\n      handleEditTodos(editValue, id);\n    } else {\n      handleEditTodos(todo, id);\n    }\n  };\n\n  const selections = [[\"Coming\", false], [\"Running\", false], [\"Done\", false]];\n\n  if (onEdit) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"editValue\",\n          value: editValue,\n          name: \"editValue\",\n          onChange: e => setEditValue(e.target.value.toLowerCase())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSave(id),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: id,\n          className: todo.complete ? \"active\" : \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: id,\n            checked: todo.complete,\n            onChange: () => checkComplete(id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), todo.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"progress\",\n          id: \"progress\",\n          children: selections.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            id: index,\n            value: option[1],\n            children: option[0]\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: todo.complete,\n          onClick: handeOnEdit,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(ListItem, \"lZB8jNT4Pjt+2MldzkqJ8eFVhDA=\");\n\n_c = ListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItem\");","map":{"version":3,"sources":["C:/Users/Mu/Desktop/todox/src/components/ListItem.js"],"names":["React","useState","ListItem","todo","id","checkComplete","handleEditTodos","onEdit","setOnEdit","editValue","setEditValue","name","handeOnEdit","handleSave","selections","e","target","value","toLowerCase","complete","map","option","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,QAAT,OAAgE;AAAA;;AAAA,MAA9C;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,EAAR;AAAYC,IAAAA,aAAZ;AAA2BC,IAAAA;AAA3B,GAA8C;AAC7E,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAACE,IAAI,CAACQ,IAAN,CAA1C;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxBJ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAFD;;AAIA,QAAMK,UAAU,GAAIT,EAAD,IAAQ;AACzBI,IAAAA,SAAS,CAAC,KAAD,CAAT;;AACA,QAAIC,SAAJ,EAAe;AACbH,MAAAA,eAAe,CAACG,SAAD,EAAYL,EAAZ,CAAf;AACD,KAFD,MAEO;AACLE,MAAAA,eAAe,CAACH,IAAD,EAAOC,EAAP,CAAf;AACD;AACF,GAPD;;AASA,QAAMU,UAAU,GAAG,CACjB,CAAC,QAAD,EAAW,KAAX,CADiB,EAEjB,CAAC,SAAD,EAAY,KAAZ,CAFiB,EAGjB,CAAE,MAAF,EAAU,KAAV,CAHiB,CAAnB;;AAOA,MAAIP,MAAJ,EAAY;AACV,wBACE;AAAA,6BACE;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,WAFL;AAGE,UAAA,KAAK,EAAEE,SAHT;AAIE,UAAA,IAAI,EAAC,WAJP;AAKE,UAAA,QAAQ,EAAGM,CAAD,IAAOL,YAAY,CAACK,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,WAAf,EAAD;AAL/B;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAQ,UAAA,OAAO,EAAE,MAAML,UAAU,CAACT,EAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAeD,GAhBD,MAgBO;AACL,wBACE;AAAA,6BACE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAEA,EAAhB;AAAoB,UAAA,SAAS,EAAED,IAAI,CAACgB,QAAL,GAAgB,QAAhB,GAA2B,EAA1D;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,EAAE,EAAEf,EAFN;AAGE,YAAA,OAAO,EAAED,IAAI,CAACgB,QAHhB;AAIE,YAAA,QAAQ,EAAE,MAAMd,aAAa,CAACD,EAAD;AAJ/B;AAAA;AAAA;AAAA;AAAA,kBADF,EAOGD,IAAI,CAACQ,IAPR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE;AAAQ,UAAA,IAAI,EAAC,UAAb;AAAwB,UAAA,EAAE,EAAC,UAA3B;AAAA,oBACGG,UAAU,CAACM,GAAX,CAAe,CAACC,MAAD,EAASC,KAAT,kBAEd;AAAoB,YAAA,EAAE,EAAEA,KAAxB;AAA+B,YAAA,KAAK,EAAED,MAAM,CAAC,CAAD,CAA5C;AAAA,sBACGA,MAAM,CAAC,CAAD;AADT,aAAaC,KAAb;AAAA;AAAA;AAAA;AAAA,kBAFD;AADH;AAAA;AAAA;AAAA;AAAA,gBAZF,eAsBE;AAAQ,UAAA,QAAQ,EAAEnB,IAAI,CAACgB,QAAvB;AAAiC,UAAA,OAAO,EAAEP,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA8BD;AACF;;GAxEuBV,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function ListItem({ todo, id, checkComplete, handleEditTodos }) {\r\n  const [onEdit, setOnEdit] = useState(false);\r\n  const [editValue, setEditValue] = useState(todo.name);\r\n\r\n  const handeOnEdit = () => {\r\n    setOnEdit(true);\r\n  };\r\n\r\n  const handleSave = (id) => {\r\n    setOnEdit(false);\r\n    if (editValue) {\r\n      handleEditTodos(editValue, id);\r\n    } else {\r\n      handleEditTodos(todo, id);\r\n    }\r\n  };\r\n\r\n  const selections = [\r\n    [\"Coming\", false],\r\n    [\"Running\", false],\r\n    [ \"Done\", false],\r\n  ];\r\n\r\n\r\n  if (onEdit) {\r\n    return (\r\n      <div>\r\n        <li>\r\n          <input\r\n            type=\"text\"\r\n            id=\"editValue\"\r\n            value={editValue}\r\n            name=\"editValue\"\r\n            onChange={(e) => setEditValue(e.target.value.toLowerCase())}\r\n          />\r\n\r\n          <button onClick={() => handleSave(id)}>Save</button>\r\n        </li>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <li>\r\n          <label htmlFor={id} className={todo.complete ? \"active\" : \"\"}>\r\n            <input\r\n              type=\"checkbox\"\r\n              id={id}\r\n              checked={todo.complete}\r\n              onChange={() => checkComplete(id)}\r\n            />\r\n            {todo.name}\r\n          </label>\r\n\r\n\r\n          <select name=\"progress\" id=\"progress\">\r\n            {selections.map((option, index) => (\r\n             \r\n              <option key={index} id={index} value={option[1]} >\r\n                {option[0]}\r\n              </option> \r\n            ))}\r\n            \r\n          </select>\r\n\r\n          <button disabled={todo.complete} onClick={handeOnEdit}>\r\n            Edit\r\n          </button>\r\n        </li>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}